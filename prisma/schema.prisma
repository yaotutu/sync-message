// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String      @unique
  password  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  products  Product[]
  config    UserConfig?
  cardKeys  CardKey[]

  @@map("users")
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  imageUrl    String?
  link        String
  price       Float?
  description String?
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  username    String

  @@map("products")
  @@index([userId])
}

model UserConfig {
  id              String   @id @default(uuid())
  pageTitle       String?
  pageDescription String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String   @unique

  @@map("user_configs")
  @@index([userId])
}

model CardKey {
  id        Int       @id @default(autoincrement())
  key       String    @unique
  used      Boolean   @default(false)
  message   String?
  createdAt DateTime  @default(now())
  usedAt    DateTime?
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  username  String

  @@map("card_keys")
  @@index([userId])
}
