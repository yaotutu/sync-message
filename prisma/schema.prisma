// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./users.db"
}

model Admin {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("admins")
}

model User {
  id              String          @id @default(cuid())
  username        String          @unique
  password        String
  webhookKey      String          @unique @default(uuid())
  simpleCardKeys  SimpleCardKey[]
  linkedCardKeys  LinkedCardKey[]
  products        Product[]
  config          UserConfig?
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  messages        Message[]

  @@map("users")
}

model Product {
  id          String    @id @default(cuid())
  title       String    // 商品标题
  link        String    // 商品链接
  imageUrl    String?   // 商品图片
  price       Float?    // 商品价格
  description String?   // 商品描述
  notes       String?   // 备注信息
  userId      String    // 关联用户ID
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("products")
  @@index([userId])
}

model UserConfig {
  id          String    @id @default(cuid())
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id])
  title       String?   // 页面标题
  theme       String?
  language    String?
  cardKeyExpireMinutes Int?     // 卡密过期时间（分钟）
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("user_configs")
}

model SimpleCardKey {
    id        String    @id @default(cuid())
    key       String    @unique
    userId    String
    user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    used      Boolean   @default(false)
    usedAt    DateTime?
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt

    @@map("simple_card_keys")
    @@index([userId])
}

model LinkedCardKey {
    id          String    @id @default(cuid())
    key         String    @unique
    userId      String
    user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    phone       String?   // 手机号
    appName     String?   // 应用名称
    used        Boolean   @default(false)
    usedAt      DateTime?
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt

    @@map("linked_card_keys")
    @@index([userId])
}

model Message {
  id          String    @id @default(cuid())
  content     String
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  receivedAt  DateTime  @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("messages")
}
